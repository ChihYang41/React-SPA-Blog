{"version":3,"sources":["components/nav/NavTitle.js","components/nav/NavItem.js","components/nav/nav.js","components/utils/Loading.js","components/write_post/NewPost.js","action.js","containers/NewPostContainer.js","components/post/PostCard.js","components/home/home.js","containers/HomeContainer.js","components/utils/Alert.js","components/post/post.js","containers/PostsContainer.js","components/single_post/EditItem.js","components/utils/CodeBlock.js","components/single_post/SinglePost.js","containers/SinglePostContainer.js","App.js","serviceWorker.js","reducers/posts.js","reducers/home.js","reducers/index.js","index.js"],"names":["NavTitle","props","className","to","NavItem","text","exact","path","children","match","BlogNavbar","bg","expand","fixed","Toggle","aria-controls","Collapse","id","Loading","animation","role","NewPost","handleChangeAuthor","e","setState","author","target","value","handleChangeTitle","title","handleChangeContent","body","handleSubmit","preventDefault","addPost","state","prevProps","this","history","isLoadingAddPost","setMessage","push","onChange","type","onClick","Component","ADD_POST","DELETE_POST","EDIT_POST","GET_SINGLE_POST","GET_ALL_POSTS","GET_LATEST_POSTS","message","withRouter","connect","posts","dispatch","payload","axios","post","PostCard","map","key","Home","getLatestPosts","isLoadingGetLatestPosts","latestTenPosts","home","get","AlertDismissible","alertTitle","alertContent","alertType","useState","show","setShow","useEffect","timer","setTimeout","clearTimeout","onClose","variant","dismissible","Heading","Posts","getAllPosts","allPosts","isLoadingGetAllPosts","getAllPostsError","deletePostError","addPostError","error","EditItem","CodeBlock","language","style","docco","PureComponent","defaultProps","SinglePost","handleDelete","deletePost","window","confirm","params","handleEditMode","isEditing","handleEditTitle","handleEditContent","handleEditSubmit","editPost","singlePost","ifEditSuccessfully","getSinglePost","prevState","isLoadingDeletePost","isLoadingEditPost","isLoadingPost","editPostError","source","linkTarget","renderers","code","isPostRequesting","delete","put","App","globalMessage","console","log","basename","component","Boolean","location","hostname","initState","reducer","combineReducers","action","data","store","createStore","applyMiddleware","promise","logger","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"ueAGe,SAASA,EAASC,GAC/B,OACE,kBAAC,IAAD,CAAMC,UAAU,eAAeC,GAAG,oBAAlC,QCFW,SAASC,EAAQH,GAAQ,IAC9BI,EAAoBJ,EAApBI,KAAMC,EAAcL,EAAdK,MAAOH,EAAOF,EAAPE,GACrB,OACE,kBAAC,IAAD,CACEI,KAAMJ,EACNG,MAAOA,EACPE,SAAU,gBAAGC,EAAH,EAAGA,MAAH,OACR,wBAAIP,UAAWO,EAAQ,SAAW,IAC/BA,EAAQ,KAAO,GAChB,kBAAC,IAAD,CAAMN,GAAIA,GAAKE,OCWVK,MAhBf,WACE,OACE,kBAAC,IAAD,CAAQC,GAAG,OAAOC,OAAO,KAAKC,MAAM,OAClC,kBAACb,EAAD,MACA,kBAAC,IAAOc,OAAR,CAAeC,gBAAc,qBAC7B,kBAAC,IAAOC,SAAR,CAAiBC,GAAG,oBAClB,kBAAC,IAAD,CAAKf,UAAU,WACb,kBAACE,EAAD,CAASC,KAAK,OAAOF,GAAG,IAAIG,OAAO,GAAnC,QACA,kBAACF,EAAD,CAASC,KAAK,QAAQF,GAAG,UAAzB,SACA,kBAACC,EAAD,CAASC,KAAK,eAAeF,GAAG,YAAhC,oB,2BCbK,SAASe,IACtB,OACE,6BACE,kBAAC,IAAD,CAASC,UAAU,SAASC,KAAK,UAC/B,0BAAMlB,UAAU,WAAhB,gB,ICsEOmB,E,YAxEb,WAAYpB,GAAQ,IAAD,8BACjB,4CAAMA,KAgBRqB,mBAAqB,SAACC,GACpB,EAAKC,SAAS,CACZC,OAAQF,EAAEG,OAAOC,SAnBF,EAuBnBC,kBAAoB,SAACL,GACnB,EAAKC,SAAS,CACZK,MAAON,EAAEG,OAAOC,SAzBD,EA6BnBG,oBAAsB,SAACP,GACrB,EAAKC,SAAS,CACZO,KAAMR,EAAEG,OAAOC,SA/BA,EAmCnBK,aAAe,SAACT,GACdA,EAAEU,iBADkB,IAEZC,EAAY,EAAKjC,MAAjBiC,QAFY,EAGY,EAAKC,MACrCD,EAJoB,EAGZT,OAHY,EAGJI,MAHI,EAGGE,MAEvB,EAAKP,SAAS,CACZK,MAAO,GACPE,KAAM,GACNN,OAAQ,MAzCV,EAAKU,MAAQ,CACXN,MAAO,GACPE,KAAM,GACNN,OAAQ,IALO,E,gFASAW,GAAY,IAAD,EACqBC,KAAKpC,MAA9CqC,EADoB,EACpBA,QAASC,EADW,EACXA,iBAAkBC,EADP,EACOA,WAC/BD,IAAqBH,EAAUG,kBAAqBA,IACtDC,EAAW,4BACXF,EAAQG,KAAK,a,+BAkCP,IAAD,EACyBJ,KAAKF,MAA7BN,EADD,EACCA,MAAOE,EADR,EACQA,KAAMN,EADd,EACcA,OAErB,OAD2BY,KAAKpC,MAAzBsC,iBACsB,kBAACrB,EAAD,MAE3B,6BACE,4CACC,yBAAKhB,UAAU,mBACd,qDACA,8BAAUwC,SAAUL,KAAKf,mBAAoBK,MAAOF,KAEtD,yBAAKvB,UAAU,kBACb,qDACA,8BAAUwC,SAAUL,KAAKT,kBAAmBD,MAAOE,KAErD,yBAAK3B,UAAU,oBACb,qDACA,8BAAUwC,SAAUL,KAAKP,oBAAqBH,MAAOI,KAEvD,4BAAQY,KAAK,SAASzC,UAAU,uBAAuB0C,QAASP,KAAKL,cAArE,e,GAnEca,a,iBCDTC,EAAW,WACXC,EAAc,cACdC,EAAY,YACZC,EAAkB,kBAClBC,EAAgB,gBAChBC,EAAmB,mBAkDnBX,EAAa,SAACY,GACzB,MAAO,CACLT,KAnD2B,kBAoD3BS,YCjCWC,cAAWC,YAlBF,SAACnB,GACvB,MAAO,CACLI,iBAAkBJ,EAAMoB,MAAMhB,mBAIP,SAACiB,GAC1B,MAAO,CACLtB,QAAS,SAACT,EAAQI,EAAOE,GACvByB,EDPiB,SAAC/B,EAAQI,EAAOE,GACrC,MAAO,CACLY,KAAMG,EACNW,QAASC,IAAMC,KAAK,4BAA6B,CAC/ClC,SAAQI,QAAOE,UCGNG,CAAQT,EAAQI,EAAOE,KAGlCS,WAAY,SAAAY,GACVI,EAAShB,EAAWY,OAKAE,CAtBD,SAACrD,GACxB,OAAQ,kBAAC,EAAYA,M,OCLR,SAAS2D,EAAT,GAAuC,IAAnBL,EAAkB,EAAlBA,MAAOjB,EAAW,EAAXA,QACxC,OACEiB,EAAMM,IAAI,SAAAF,GACR,OACE,yBAAKG,IAAKH,EAAK1C,GAAIf,UAAU,+BAA+B0C,QAAS,WACnEN,EAAQG,KAAK,UAAYkB,EAAK1C,MAG9B,yBAAKf,UAAU,aACb,wBAAIA,UAAU,cAAcyD,EAAK1C,GAAjC,KAAuC0C,EAAK9B,W,IC4BzCkC,E,6LA9BXC,EAD2B3B,KAAKpC,MAAxB+D,oB,+BAIA,IAAD,EACsD3B,KAAKpC,MAA1DqC,EADD,EACCA,QAAS2B,EADV,EACUA,wBAAyBC,EADnC,EACmCA,eAC1C,OACE,6BACE,yCACA,6XACA,0JAEED,EACE,kBAAC/C,EAAD,MAEA,yBAAKhB,UAAU,qBACb,wDACA,yBAAKA,UAAU,aACb,kBAAC0D,EAAD,CAAUL,MAAOW,EAAgBJ,IAAKI,EAAejD,GAAIqB,QAASA,W,GApB/DO,aCmBJQ,cAAWC,YAfF,SAACnB,GACvB,MAAO,CACL+B,eAAgB/B,EAAMgC,KAAKD,eAC3BD,wBAAyB9B,EAAMgC,KAAKF,0BAIb,SAACT,GAC1B,MAAO,CACLQ,eAAgB,WACdR,EJgCG,CACLb,KAAMQ,EACNM,QAASC,IAAMU,IAAI,iEI7BGd,CAnBJ,SAACrD,GACrB,OAAQ,kBAAC,EAASA,M,mCCJL,SAASoE,EAAT,GAAkE,IAAvCC,EAAsC,EAAtCA,WAAYC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,UAAY,EACtDC,oBAAS,GAD6C,mBACvEC,EADuE,KACjEC,EADiE,KAW9E,OARAC,oBACE,WACE,IAAIC,EAAQC,WAAW,kBAAMH,GAAQ,IAAQ,KAC7C,OAAO,WACJI,aAAaF,MAKlB,oCACE,kBAAC,IAAD,CAAOH,KAAMA,EAAMM,QAAS,kBAAML,GAAQ,IAAQM,QAAST,EAAWU,aAAW,GAC/E,kBAAC,IAAMC,QAAP,KAAgBb,GAChB,2BACGC,K,ICkBIa,E,0LA9BKhD,IAEhBiD,EADwBhD,KAAKpC,MAArBoF,iB,+BAIA,IAAD,EAQHhD,KAAKpC,MANPqC,EAFK,EAELA,QACAgD,EAHK,EAGLA,SACAC,EAJK,EAILA,qBACAC,EALK,EAKLA,iBACAC,EANK,EAMLA,gBACAC,EAPK,EAOLA,aAGIC,EAAQH,GAAoBC,GAAmBC,EAErD,OAAIH,EAA6B,kBAACrE,EAAD,MAE/B,6BACE,qCACCyE,GAAS,kBAACtB,EAAD,CAAkBC,WAAY,iCAASC,aAAc,2DAC/D,yBAAKrE,UAAU,aACb,kBAAC0D,EAAD,CAAUL,MAAO+B,EAAUxB,IAAKwB,EAASrE,GAAIqB,QAASA,U,GAxB5CO,aCsBLQ,cAAWC,YAlBF,SAACnB,GACvB,MAAO,CACLmD,SAAUnD,EAAMoB,MAAM+B,SACtBC,qBAAsBpD,EAAMoB,MAAMgC,qBAClCC,iBAAkBrD,EAAMoB,MAAMiC,iBAC9BC,gBAAiBtD,EAAMoB,MAAMkC,gBAC7BC,aAAcvD,EAAMoB,MAAMmC,eAIH,SAAClC,GAC1B,MAAO,CACL6B,YAAa,WACX7B,EPsBG,CACLb,KAAMO,EACNO,QAASC,IAAMU,IAAI,uDOnBGd,CAtBH,SAACrD,GACtB,OAAQ,kBAAC,EAAUA,M,OCLN,SAAS2F,EAAT,GAAiD,IAA9B1F,EAA6B,EAA7BA,UAAWyB,EAAkB,EAAlBA,MAAOe,EAAW,EAAXA,SAClD,OACE,yBAAKxC,UAAWA,GACd,8BAAUyB,MAAOA,EAAOe,SAAUA,K,wCCAlCmD,E,iLAUM,IAAD,EACqBxD,KAAKpC,MAAzB6F,EADD,EACCA,SAAUnE,EADX,EACWA,MAClB,OACE,kBAAC,IAAD,CAAmBmE,SAAUA,EAAUC,MAAOC,SAC3CrE,O,GAdesE,iBAAlBJ,EAMGK,aAAe,CACpBJ,SAAU,MAaCD,QC6GAM,G,mBA1Hb,WAAYlG,GAAQ,IAAD,8BACjB,4CAAMA,KAwCRmG,aAAe,WACb,IADmB,EAEW,EAAKnG,MAA3BQ,EAFW,EAEXA,MAAO4F,EAFI,EAEJA,WACXC,OAAOC,QAFK,+CAGdF,EAAW5F,EAAM+F,OAAOvF,KA7CT,EAiDnBwF,eAAiB,WACf,EAAKjF,SAAS,CACZkF,WAAY,EAAKvE,MAAMuE,aAnDR,EAuDnBC,gBAAkB,SAACpF,GACjB,EAAKC,SAAS,CACZK,MAAON,EAAEG,OAAOC,SAzDD,EA6DnBiF,kBAAoB,SAACrF,GACnB,EAAKC,SAAS,CACZO,KAAMR,EAAEG,OAAOC,SA/DA,EAmEnBkF,iBAAmB,WAAO,IAAD,EACS,EAAK1E,MAA7BV,EADe,EACfA,OAAQI,EADO,EACPA,MAAOE,EADA,EACAA,KADA,EAEU,EAAK9B,OACtC6G,EAHuB,EAEfA,UAFe,EAELC,WACE9F,GAAIQ,EAAQI,EAAOE,GACvC,EAAKP,SAAS,CACZkF,WAAY,EAAKvE,MAAMuE,UACvBM,mBAAoB,QAvEtB,EAAK7E,MAAQ,CACXuE,WAAW,EACXM,mBAAoB,KACpBnF,MAAO,GACPE,KAAM,GACNN,OAAQ,IAPO,E,iFAWE,IAAD,EACeY,KAAKpC,MAA9BQ,EADU,EACVA,OACRwG,EAFkB,EACHA,eACDxG,EAAM+F,OAAOvF,M,yCAGVmB,EAAW8E,GAAY,IAAD,EACuD7E,KAAKpC,MAA3FQ,EAD+B,EAC/BA,MAAO6B,EADwB,EACxBA,QAAS6E,EADe,EACfA,oBAAqBC,EADN,EACMA,kBAAmBH,EADzB,EACyBA,cAAezE,EADxC,EACwCA,WAE/E,GAAIJ,IAAcC,KAAKpC,MAAO,CAAC,IACrB8G,EAAe1E,KAAKpC,MAApB8G,WACR1E,KAAKb,SAAS,CACZK,MAAOkF,EAAWlF,MAClBE,KAAMgF,EAAWhF,KACjBN,OAAQsF,EAAWtF,SAInB0F,IAAwB/E,EAAU+E,qBAAwBA,IAC5D3E,EAAW,4BACXF,EAAQG,KAAK,WAGX2E,IAAsBhF,EAAUgF,mBAAsBA,IACxDH,EAAcxG,EAAM+F,OAAOvF,IAC3BoB,KAAKb,SAAS,CACZwF,oBAAoB,O,+BAyChB,IAAD,EACgD3E,KAAKF,MAApDuE,EADD,EACCA,UAAW7E,EADZ,EACYA,MAAOE,EADnB,EACmBA,KAAMiF,EADzB,EACyBA,mBADzB,EAE8C3E,KAAKpC,MAAlD8G,EAFD,EAECA,WAAYM,EAFb,EAEaA,cACd1B,EAHC,EAE4B2B,cAEnC,OACE,6BACIN,GAAsB,kBAAC3C,EAAD,CAAkBC,WAAY,iCAASC,aAAc,2EAAqBC,UAAW,YAC3GmB,GAAS,kBAACtB,EAAD,CAAkBC,WAAY,iCAASC,aAAc,yDAAaC,UAAW,WACxF,yBAAKtE,UAAU,WAEXwG,EACE,kBAAC,WAAD,KACE,kBAACd,EAAD,CAAU1F,UAAU,aAAayB,MAAOE,EAAOa,SAAUL,KAAKsE,kBAC9D,kBAACf,EAAD,CAAU1F,UAAU,eAAeyB,MAAOI,EAAMW,SAAUL,KAAKuE,qBAGjE,kBAAC,WAAD,KACIS,EAAgB,kBAACnG,EAAD,MAAc,0CAAW6F,EAAWlF,OACpDwF,EAAgB,kBAACnG,EAAD,MAAc,2CAAY6F,EAAWtF,QACrD4F,EAAgB,kBAACnG,EAAD,MAAc,kBAAC,IAAD,CAAUqG,OAAQR,EAAWhF,KAAM7B,UAAU,eAAesH,WAAW,SAASC,UAAW,CAAEC,KAAM7B,MAGzI,yBAAK3F,UAAU,iBAEXwG,EACE,kBAAC,WAAD,KACE,4BAAQxG,UAAU,kBAAkB0C,QAASP,KAAKwE,kBAAlD,WAGF,kBAAC,WAAD,KACE,4BAAQ3G,UAAU,kBAAkB0C,QAASP,KAAK+D,cAAlD,UACA,4BAAQlG,UAAU,kBAAkB0C,QAASP,KAAKoE,gBAAlD,SAGN,yBAAKvG,UAAU,sBACb,kBAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,gBAA5B,qB,GAjHW2C,cC6BVQ,cAAWC,YA9BF,SAACnB,GACvB,MAAO,CACL4E,WAAY5E,EAAMoB,MAAMwD,WACxBM,cAAelF,EAAMoB,MAAMoE,iBAC3BR,oBAAqBhF,EAAMoB,MAAM4D,oBACjCC,kBAAmBjF,EAAMoB,MAAM6D,kBAC/BE,cAAenF,EAAMoB,MAAM+D,gBAIJ,SAAC9D,GAC1B,MAAO,CACL6C,WAAY,SAAApF,GACVuC,EXFoB,SAACvC,GACzB,MAAO,CACL0B,KAAMI,EACNU,QAASC,IAAMkE,OAAO,6BAA+B3G,IWD1CoF,CAAWpF,KAGtB6F,SAAU,SAAC7F,EAAIQ,EAAQI,EAAOE,GAC5ByB,EXCkB,SAACvC,EAAIQ,EAAQI,EAAOE,GAC1C,MAAO,CACLY,KAAMK,EACNS,QAASC,IAAMmE,IAAI,6BAA+B5G,EAAK,CACrDQ,SAAQI,QAAOE,UWLN+E,CAAS7F,EAAIQ,EAAQI,EAAOE,KAGvCkF,cAAe,SAAAhG,GACbuC,EXMuB,SAACvC,GAC5B,MAAO,CACL0B,KAAMM,EACNQ,QAASC,IAAMU,IAAI,6BAA+BnD,IWTvCgG,CAAchG,KAGzBuB,WAAY,SAAAY,GACVI,EAAShB,EAAWY,OAKAE,CAlCE,SAACrD,GAC3B,OAAQ,kBAAC,EAAeA,MCKpB6H,G,YACJ,WAAY7H,GAAQ,IAAD,8BACjB,4CAAMA,KACDkC,MAAQ,CACXiB,QAAS,IAHM,E,sEAOT,IACA2E,EAAkB1F,KAAKpC,MAAvB8H,cAER,OADAC,QAAQC,IAAI5F,KAAKpC,OAEf,kBAAC,IAAD,CAAQiI,SAAS,mBACf,yBAAKhI,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACX6H,EAAgB,kBAAC1D,EAAD,CAAkBC,WAAYyD,EAAevD,UAAW,YAAgB,KAC1F,kBAAC,IAAD,CAAOlE,OAAK,EAACC,KAAK,IAAI4H,UAAWpE,IACjC,kBAAC,IAAD,CAAOzD,OAAK,EAACC,KAAK,SAAS4H,UAAW/C,IACtC,kBAAC,IAAD,CAAO7E,KAAK,WAAW4H,UAAW9G,IAClC,kBAAC,IAAD,CAAOd,KAAK,aAAa4H,UAAWhC,W,GApB9BtD,aAkCHS,eANS,SAAAnB,GACtB,MAAO,CACL4F,cAAe5F,EAAMoB,MAAMwE,gBAIS,KAAzBzE,CAA+BwE,IClC1BM,QACW,cAA7B9B,OAAO+B,SAASC,UAEe,UAA7BhC,OAAO+B,SAASC,UAEhBhC,OAAO+B,SAASC,SAAS7H,MACvB,2D,8kBChBN,IAAM8H,GAAY,CAChBjD,SAAU,GACVyB,WAAY,GACZY,kBAAkB,EAClBpC,sBAAsB,EACtB4B,qBAAqB,EACrB5E,kBAAkB,EAClB6E,mBAAmB,EACnB5B,iBAAkB,KAClBC,gBAAiB,KACjBC,aAAc,KACd4B,cAAe,KACfS,cAAe,M,wjBCZjB,IAAMQ,GAAY,CAChBrE,eAAgB,GAChBD,yBAAyB,GCA3B,IAKeuE,GALCC,aAAgB,CAC9BlF,MFaa,WAAkD,IAA5BpB,EAA2B,uDAAnBoG,GAAWG,EAAQ,uCAC9D,OAAQA,EAAO/F,MACb,IAAI,GAAJ,OAAQO,EAAR,YACE,OAAO,GAAP,GACKf,EADL,CAEEoD,sBAAsB,EACtBC,iBAAkB,OAEtB,IAAI,GAAJ,OAAQtC,EAAR,cACE,OAAO,GAAP,GACKf,EADL,CAEEmD,SAAUoD,EAAOjF,QAAQkF,KACzBpD,sBAAsB,IAE1B,IAAI,GAAJ,OAAQrC,EAAR,aACE,OAAO,GAAP,GACKf,EADL,CAEEoD,sBAAsB,EACtBC,iBAAkBkD,EAAO/C,QAE7B,IAAI,GAAJ,OAAQ7C,EAAR,YACE,OAAO,GAAP,GACKX,EADL,CAEEI,kBAAkB,EAClBmD,aAAc,KACdqC,cAAe,OAEnB,IAAI,GAAJ,OAAQjF,EAAR,cACE,OAAO,GAAP,GACKX,EADL,CAEEI,kBAAkB,IAEtB,IAAI,GAAJ,OAAQO,EAAR,aACE,OAAO,GAAP,GACKX,EADL,CAEEoD,sBAAsB,EACtBG,aAAcgD,EAAO/C,QAEzB,IAAI,GAAJ,OAAQ5C,EAAR,YACE,OAAO,GAAP,GACKZ,EADL,CAEEgF,qBAAqB,EACrB1B,gBAAiB,KACjBsC,cAAe,OAEnB,IAAI,GAAJ,OAAQhF,EAAR,cACE,OAAO,GAAP,GACKZ,EADL,CAEEgF,qBAAqB,IAEzB,IAAI,GAAJ,OAAQpE,EAAR,aACE,OAAO,GAAP,GACKZ,EADL,CAEEgF,qBAAqB,EACrB1B,gBAAiBiD,EAAO/C,QAE5B,IAAI,GAAJ,OAAQ1C,EAAR,YACE,OAAO,GAAP,GACKd,EADL,CAEEwF,kBAAkB,IAEtB,IAAI,GAAJ,OAAQ1E,EAAR,cACE,OAAO,GAAP,GACKd,EADL,CAEE4E,WAAY2B,EAAOjF,QAAQkF,KAC3BhB,kBAAkB,IAEtB,IAAI,GAAJ,OAAQ1E,EAAR,aACE,OAAO,GAAP,GACKd,EADL,CAEEwF,kBAAkB,IAEtB,IAAI,GAAJ,OAAQ3E,EAAR,YACE,OAAO,GAAP,GACKb,EADL,CAEEiF,mBAAmB,EACnBE,cAAe,KACfS,cAAe,OAEnB,IAAI,GAAJ,OAAQ/E,EAAR,cACE,OAAO,GAAP,GACKb,EADL,CAEE4E,WAAY2B,EAAOjF,QAAQkF,KAC3BvB,mBAAmB,IAEvB,IAAI,GAAJ,OAAQpE,EAAR,aACE,OAAO,GAAP,GACKb,EADL,CAEEiF,mBAAmB,EACnBE,cAAeoB,EAAO/C,QAE1B,IAAK,kBACH,OAAO,GAAP,GACKxD,EADL,CAEE4F,cAAeW,EAAOtF,UAE1B,QACE,OAAOjB,IE7GXgC,KDCa,WAAiD,IAA5BhC,EAA2B,uDAAnBoG,GAAWG,EAAQ,uCAC7D,OAAQA,EAAO/F,MACb,IAAI,GAAJ,OAAQQ,EAAR,YACE,OAAO,MACFhB,EADL,CAEE8B,yBAAyB,IAE7B,IAAI,GAAJ,OAAQd,EAAR,cACE,OAAO,MACFhB,EADL,CAEE+B,eAAgBwE,EAAOjF,QAAQkF,KAC/B1E,yBAAyB,IAE7B,IAAI,GAAJ,OAAQd,EAAR,aACE,OAAO,MACFhB,EADL,CAEE8B,yBAAyB,IAE7B,QACE,OAAO9B,M,+BEdPyG,GAAQC,aAAYL,GAASM,aACjCC,KACAC,OAGFC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,IACf,kBAAC,GAAD,OAEAO,SAASC,eAAe,SJ4GtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.bc742736.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nexport default function NavTitle(props) {\n  return (\n    <Link className=\"navbar-brand\" to=\"/React-SPA-Blog/\">Blog</Link>\n  )\n}","import React from 'react';\nimport { Link, Route } from \"react-router-dom\";\n\nexport default function NavItem(props) {\n  const { text, exact, to } = props;\n  return (\n    <Route\n      path={to}\n      exact={exact}\n      children={({ match }) => (\n        <li className={match ? \"active\" : \"\"}>\n          {match ? \"> \" : \"\"}\n          <Link to={to}>{text}</Link>\n        </li>\n      )}\n    />\n  )\n}","import React from 'react';\nimport './nav.css';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavTitle from './NavTitle';\nimport NavItem from './NavItem';\n\nfunction BlogNavbar() {\n  return (\n    <Navbar bg=\"dark\" expand=\"lg\" fixed=\"top\">\n      <NavTitle/>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <NavItem text=\"Home\" to=\"/\" exact={true}>Home</NavItem>\n          <NavItem text=\"Posts\" to=\"/posts\">Posts</NavItem>\n          <NavItem text=\"Write a post\" to=\"/newPost\">Write a post</NavItem>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default BlogNavbar;","import React from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\n\nexport default function Loading() {\n  return (\n    <div >\n      <Spinner animation=\"border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>\n    </div>\n  )\n}","import React, { Component } from 'react';\nimport './NewPost.css';\nimport Loading from '../utils/Loading'\n\nclass NewPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      body: '',\n      author: ''\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { history, isLoadingAddPost, setMessage} = this.props\n    if (isLoadingAddPost !== prevProps.isLoadingAddPost && !isLoadingAddPost) {\n      setMessage(\"新增成功\");\n      history.push('/posts');\n    }\n  }\n\n  handleChangeAuthor = (e) => {\n    this.setState({\n      author: e.target.value\n    })\n  }\n\n  handleChangeTitle = (e) => {\n    this.setState({\n      title: e.target.value\n    })\n  }\n\n  handleChangeContent = (e) => {\n    this.setState({\n      body: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { addPost } = this.props;\n    const { author, title, body } = this.state\n    addPost(author, title, body);\n    this.setState({\n      title: '',\n      body: '',\n      author: ''\n    })\n  }\n\n  render() {\n    const { title, body, author } = this.state;\n    const {isLoadingAddPost} = this.props;\n    if (isLoadingAddPost) return <Loading />\n    return (\n      <div>\n        <h2>Write a Post</h2>\n         <div className=\"new-post-author\">\n          <label>作者：</label>\n          <textarea onChange={this.handleChangeAuthor} value={author}></textarea>\n        </div>\n        <div className=\"new-post-title\">\n          <label>標題：</label>\n          <textarea onChange={this.handleChangeTitle} value={title}></textarea>\n        </div>\n        <div className=\"new-post-content\">\n          <label>內文：</label>\n          <textarea onChange={this.handleChangeContent} value={body}></textarea>\n        </div>\n        <button type=\"submit\" className=\"btn btn-outline-info\" onClick={this.handleSubmit}>Submit</button>\n      </div>\n    );\n  }\n}\n\nexport default NewPost;","import axios from 'axios';\n\n// action types\nexport const ADD_POST = 'ADD_POST'\nexport const DELETE_POST = 'DELETE_POST';\nexport const EDIT_POST = 'EDIT_POST';\nexport const GET_SINGLE_POST = 'GET_SINGLE_POST';\nexport const GET_ALL_POSTS = 'GET_ALL_POSTS';\nexport const GET_LATEST_POSTS = 'GET_LATEST_POSTS';\nexport const REQUEST_SUCCESS = 'REQUEST_SUCCESS';\n\n// action creator\nexport const addPost = (author, title, body) => {\n  return {\n    type: ADD_POST,\n    payload: axios.post('https://qootest.com/posts', {\n      author, title, body\n    })\n  }\n}\n\nexport const deletePost = (id) => {\n  return {\n    type: DELETE_POST,\n    payload: axios.delete('https://qootest.com/posts/' + id)\n  }\n}\n\nexport const editPost = (id, author, title, body) => {\n  return {\n    type: EDIT_POST,\n    payload: axios.put('https://qootest.com/posts/' + id , {\n      author, title, body\n    })\n  }\n}\n\nexport const getSinglePost = (id) => {\n  return {\n    type: GET_SINGLE_POST,\n    payload: axios.get('https://qootest.com/posts/' + id)\n  }\n}\n\nexport const getAllPosts = () => {\n  return {\n    type: GET_ALL_POSTS,\n    payload: axios.get('https://qootest.com/posts?_sort=id&_order=desc')\n  }\n}\n\nexport const getLatestPosts = () => {\n  return {\n    type: GET_LATEST_POSTS,\n    payload: axios.get('https://qootest.com/posts?_sort=id&_order=desc&_limit=10')\n  }\n}\n\nexport const setMessage = (message) => {\n  return {\n    type: REQUEST_SUCCESS,\n    message\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport NewPost from '../components/write_post/NewPost';\nimport { addPost, setMessage } from '../action'\n\nconst NewPostContainer = (props) => {\n  return (<NewPost {...props} />)\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoadingAddPost: state.posts.isLoadingAddPost\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (author, title, body)  => {\n      dispatch(addPost(author, title, body))\n    },\n\n    setMessage: message => {\n      dispatch(setMessage(message))\n    }\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NewPostContainer));","import React from 'react';\n\nexport default function PostCard({ posts, history }) {\n  return (\n    posts.map(post => {\n      return (\n        <div key={post.id} className=\"card text-white bg-dark mb-3\" onClick={() => {\n          history.push('/posts/' + post.id)\n        }}>\n\n          <div className=\"card-body\">\n            <h4 className=\"card-title\">{post.id}. {post.title}</h4>\n          </div>\n        </div>\n      )\n    })\n  )\n}","import React, { Component } from 'react';\nimport './home.css';\nimport Loading from '../utils/Loading';\nimport PostCard from '../post/PostCard';\nimport PropTypes from 'prop-types';\n\nclass Home extends Component {\n  componentDidMount() {\n    const { getLatestPosts } = this.props;\n    getLatestPosts();\n  }\n\n  render() {\n    const { history, isLoadingGetLatestPosts, latestTenPosts } = this.props;\n    return (\n      <div>\n        <h2>Home Page</h2>\n        <p>E 世代最ㄅㄧㄤˋ的事情，就是到戰略高手上奇摩家族，一邊用即時通把妹，或是帶著最新的哈電族跟同一掛的麻吉去西門町壓馬路。</p>\n        <p>如果有人看不懂，哇哩咧，你們就真的是LKK了。</p>\n        {\n          isLoadingGetLatestPosts ?\n            <Loading />\n            :\n            <div className=\"latest-posts-list\">\n              <h3>最新文章</h3>\n              <div className=\"post-list\">\n                <PostCard posts={latestTenPosts} key={latestTenPosts.id} history={history}/>\n              </div>\n            </div>\n        }\n      </div>\n    );\n  }\n}\n\nHome.propTypes = {\n  getLatestPosts: PropTypes.func,\n}\n\nexport default Home;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\nimport Home from '../components/home/home';\nimport { getLatestPosts } from '../action';\n\nconst HomeContainer = (props) => {\n  return (<Home {...props} />)\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    latestTenPosts: state.home.latestTenPosts,\n    isLoadingGetLatestPosts: state.home.isLoadingGetLatestPosts\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getLatestPosts: () => {\n      dispatch(getLatestPosts())\n    }\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(HomeContainer));","import React, { useState, useEffect } from 'react';\nimport Alert from 'react-bootstrap/Alert';\n\nexport default function AlertDismissible({alertTitle, alertContent, alertType}) {\n  const [show, setShow] = useState(true);\n\n  useEffect(\n    () => {\n      let timer = setTimeout(() => setShow(false), 2000);\n      return () => {\n         clearTimeout(timer)\n      }\n    }\n  )\n  return (\n    <>\n      <Alert show={show} onClose={() => setShow(false)} variant={alertType} dismissible>\n        <Alert.Heading>{alertTitle}</Alert.Heading>\n        <p>\n          {alertContent}\n        </p>\n      </Alert>\n    </>\n  );\n}\n","import React, { Component } from 'react';\nimport './post.css';\nimport PostCard from './PostCard';\nimport Loading from '../utils/Loading';\nimport AlertDismissible from '../utils/Alert';\n\nclass Posts extends Component {\n  componentDidMount(prevProps) {\n    const { getAllPosts } = this.props;\n    getAllPosts();\n  }\n\n  render() {\n    const {\n      history,\n      allPosts,\n      isLoadingGetAllPosts,\n      getAllPostsError,\n      deletePostError,\n      addPostError,\n    } = this.props;\n\n    const error = getAllPostsError || deletePostError || addPostError;\n\n    if (isLoadingGetAllPosts) return <Loading/>\n    return (\n      <div>\n        <h2>Posts</h2>\n        {error && <AlertDismissible alertTitle={'發生錯誤！'} alertContent={'麻煩重新操作一次。'}/>}\n        <div className=\"post-list\">\n          <PostCard posts={allPosts} key={allPosts.id} history={history}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Posts;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\nimport Posts from '../components/post/post';\nimport { getAllPosts } from '../action'\n\nconst PostsContainer = (props) => {\n  return (<Posts {...props} />)\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    allPosts: state.posts.allPosts,\n    isLoadingGetAllPosts: state.posts.isLoadingGetAllPosts,\n    getAllPostsError: state.posts.getAllPostsError,\n    deletePostError: state.posts.deletePostError,\n    addPostError: state.posts.addPostError\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getAllPosts: () => {\n      dispatch(getAllPosts())\n    }\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PostsContainer));\n","import React from 'react';\n\nexport default function EditItem({className, value, onChange}) {\n  return(\n    <div className={className}>\n      <textarea value={value} onChange={onChange}></textarea>\n    </div>\n  )\n}","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/cjs/styles/prism\";\n\nclass CodeBlock extends PureComponent {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    language: PropTypes.string\n  };\n\n  static defaultProps = {\n    language: null,\n  };\n\n  render() {\n    const { language, value } = this.props;\n    return (\n      <SyntaxHighlighter language={language} style={docco}>\n        {value}\n      </SyntaxHighlighter>\n    );\n  }\n}\n\nexport default CodeBlock;","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport './singlePost.css';\nimport Loading from '../utils/Loading';\nimport EditItem from './EditItem';\nimport Markdown from 'react-markdown';\nimport CodeBlock from \"../utils/CodeBlock\";\nimport AlertDismissible from '../utils/Alert';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass SinglePost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditing: false,\n      ifEditSuccessfully: null,\n      title: '',\n      body: '',\n      author: '',\n    }\n  }\n\n  componentDidMount() {\n    const { match, getSinglePost } = this.props\n    getSinglePost(match.params.id);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { match, history, isLoadingDeletePost, isLoadingEditPost, getSinglePost, setMessage } = this.props;\n\n    if (prevProps !== this.props) {\n      const { singlePost } = this.props\n      this.setState({\n        title: singlePost.title,\n        body: singlePost.body,\n        author: singlePost.author\n      })\n    }\n\n    if (isLoadingDeletePost !== prevProps.isLoadingDeletePost && !isLoadingDeletePost) {\n      setMessage(\"刪除成功\");\n      history.push('/posts')\n    }\n\n    if (isLoadingEditPost !== prevProps.isLoadingEditPost && !isLoadingEditPost) {\n      getSinglePost(match.params.id);\n      this.setState({\n        ifEditSuccessfully: true\n      })\n    }\n  }\n\n  handleDelete = () => {\n    const message = '確定要刪除嗎？';\n    const { match, deletePost } = this.props;\n    if (window.confirm(message)) {\n      deletePost(match.params.id);\n    }\n  }\n\n  handleEditMode = () => {\n    this.setState({\n      isEditing: !this.state.isEditing,\n    })\n  }\n\n  handleEditTitle = (e) => {\n    this.setState({\n      title: e.target.value\n    })\n  }\n\n  handleEditContent = (e) => {\n    this.setState({\n      body: e.target.value\n    })\n  }\n\n  handleEditSubmit = () => {\n    const { author, title, body } = this.state;\n    const { editPost, singlePost } = this.props;\n    editPost(singlePost.id, author, title, body);\n    this.setState({\n      isEditing: !this.state.isEditing,\n      ifEditSuccessfully: null\n    })\n  }\n\n  render() {\n    const { isEditing, title, body, ifEditSuccessfully } = this.state;\n    const { singlePost, isLoadingPost, editPostError } = this.props;\n    const error = editPostError;\n    return (\n      <div>\n        { ifEditSuccessfully && <AlertDismissible alertTitle={'編輯成功！'} alertContent={'你很棒！文章 bang 不一樣了！'} alertType={\"success\"}/> }\n        { error && <AlertDismissible alertTitle={'發生錯誤！'} alertContent={'麻煩重新操作一次。'} alertType={\"danger\"}/> }\n        <div className=\"content\">\n          {\n            isEditing ?\n              <Fragment>\n                <EditItem className=\"edit-title\" value={title} onChange={this.handleEditTitle} />\n                <EditItem className=\"edit-content\" value={body} onChange={this.handleEditContent} />\n              </Fragment>\n              :\n              <Fragment>\n                { isLoadingPost ? <Loading /> : <h2>Title：{singlePost.title}</h2>}\n                { isLoadingPost ? <Loading /> : <h3>Author：{singlePost.author}</h3>}\n                { isLoadingPost ? <Loading /> : <Markdown source={singlePost.body} className=\"card-content\" linkTarget=\"_blank\" renderers={{ code: CodeBlock }}/> }\n              </Fragment>\n          }\n          <div className=\"btn-container\">\n            {\n              isEditing ?\n                <Fragment>\n                  <button className=\"btn btn-warning\" onClick={this.handleEditSubmit}>Submit</button>\n                </Fragment>\n                :\n                <Fragment>\n                  <button className=\"btn btn-primary\" onClick={this.handleDelete}>Delete</button>\n                  <button className=\"btn btn-warning\" onClick={this.handleEditMode}>Edit</button>\n                </Fragment>\n            }\n            <div className=\"back-btn-container\">\n              <Link to='/posts' className=\"btn btn-info\"> Go back </Link>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default SinglePost;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\nimport SinglePost from '../components/single_post/SinglePost';\nimport { getSinglePost, deletePost, editPost, setMessage } from '../action'\n\nconst SinglePostContainer = (props) => {\n  return (<SinglePost {...props} />)\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    singlePost: state.posts.singlePost,\n    isLoadingPost: state.posts.isPostRequesting,\n    isLoadingDeletePost: state.posts.isLoadingDeletePost,\n    isLoadingEditPost: state.posts.isLoadingEditPost,\n    editPostError: state.posts.editPostError\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    deletePost: id => {\n      dispatch(deletePost(id))\n    },\n\n    editPost: (id, author, title, body) => {\n      dispatch(editPost(id, author, title, body))\n    },\n\n    getSinglePost: id => {\n      dispatch(getSinglePost(id))\n    },\n\n    setMessage: message => {\n      dispatch(setMessage(message))\n    }\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SinglePostContainer));","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport './bootstrap.min.css'\nimport './App.css';\nimport BlogNavbar from './components/nav/nav.js';\nimport NewPost from './containers/NewPostContainer.js';\nimport Home from './containers/HomeContainer.js';\nimport Posts from './containers/PostsContainer.js';\nimport SinglePost from './containers/SinglePostContainer.js';\nimport AlertDismissible from './components/utils/Alert';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: ''\n    }\n  }\n\n  render() {\n    const { globalMessage } = this.props;\n    console.log(this.props)\n    return (\n      <Router basename=\"/React-SPA-Blog\">\n        <div className=\"App\">\n          <BlogNavbar/>\n          <div className=\"main-page\">\n            { globalMessage ? <AlertDismissible alertTitle={globalMessage} alertType={\"success\"} /> : null}\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/posts\" component={Posts} />\n            <Route path=\"/newPost\" component={NewPost} />\n            <Route path=\"/posts/:id\" component={SinglePost} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    globalMessage: state.posts.globalMessage\n  }\n}\n\nexport default connect(mapStateToProps, null)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { GET_ALL_POSTS, ADD_POST, DELETE_POST, GET_SINGLE_POST, EDIT_POST } from '../action';\n\nconst initState = {\n  allPosts: [],\n  singlePost: {},\n  isPostRequesting: false,\n  isLoadingGetAllPosts: false,\n  isLoadingDeletePost: false,\n  isLoadingAddPost: false,\n  isLoadingEditPost: false,\n  getAllPostsError: null,\n  deletePostError: null,\n  addPostError: null,\n  editPostError: null,\n  globalMessage: null\n};\n\n// reducers\nexport default function postsReducer(state = initState, action) {\n  switch (action.type) {\n    case `${GET_ALL_POSTS}_PENDING`:\n      return {\n        ...state,\n        isLoadingGetAllPosts: true,\n        getAllPostsError: null,\n      }\n    case `${GET_ALL_POSTS}_FULFILLED`:\n      return {\n        ...state,\n        allPosts: action.payload.data,\n        isLoadingGetAllPosts: false,\n      }\n    case `${GET_ALL_POSTS}_REJECTED`:\n      return {\n        ...state,\n        isLoadingGetAllPosts: false,\n        getAllPostsError: action.error\n      }\n    case `${ADD_POST}_PENDING`:\n      return {\n        ...state,\n        isLoadingAddPost: true,\n        addPostError: null,\n        globalMessage: null\n      }\n    case `${ADD_POST}_FULFILLED`:\n      return {\n        ...state,\n        isLoadingAddPost: false\n      }\n    case `${ADD_POST}_REJECTED`:\n      return {\n        ...state,\n        isLoadingGetAllPosts: false,\n        addPostError: action.error\n      }\n    case `${DELETE_POST}_PENDING`:\n      return {\n        ...state,\n        isLoadingDeletePost: true,\n        deletePostError: null,\n        globalMessage: null\n      }\n    case `${DELETE_POST}_FULFILLED`:\n      return {\n        ...state,\n        isLoadingDeletePost: false,\n      }\n    case `${DELETE_POST}_REJECTED`:\n      return {\n        ...state,\n        isLoadingDeletePost: false,\n        deletePostError: action.error\n      }\n    case `${GET_SINGLE_POST}_PENDING`:\n      return {\n        ...state,\n        isPostRequesting: true,\n      }\n    case `${GET_SINGLE_POST}_FULFILLED`:\n      return {\n        ...state,\n        singlePost: action.payload.data,\n        isPostRequesting: false\n      }\n    case `${GET_SINGLE_POST}_REJECTED`:\n      return {\n        ...state,\n        isPostRequesting: false,\n      }\n    case `${EDIT_POST}_PENDING`:\n      return {\n        ...state,\n        isLoadingEditPost: true,\n        editPostError: null,\n        globalMessage: null\n      }\n    case `${EDIT_POST}_FULFILLED`:\n      return {\n        ...state,\n        singlePost: action.payload.data,\n        isLoadingEditPost: false\n      }\n    case `${EDIT_POST}_REJECTED`:\n      return {\n        ...state,\n        isLoadingEditPost: false,\n        editPostError: action.error\n      }\n    case 'REQUEST_SUCCESS':\n      return {\n        ...state,\n        globalMessage: action.message\n      }\n    default:\n      return state\n  }\n}\n","import { GET_LATEST_POSTS } from '../action';\n\nconst initState = {\n  latestTenPosts: [],\n  isLoadingGetLatestPosts: false,\n}\n\nexport default function homeReducer(state = initState, action) {\n  switch (action.type) {\n    case `${GET_LATEST_POSTS}_PENDING`:\n      return {\n        ...state,\n        isLoadingGetLatestPosts: true,\n      }\n    case `${GET_LATEST_POSTS}_FULFILLED`:\n      return {\n        ...state,\n        latestTenPosts: action.payload.data,\n        isLoadingGetLatestPosts: false,\n      }\n    case `${GET_LATEST_POSTS}_REJECTED`:\n      return {\n        ...state,\n        isLoadingGetLatestPosts: false,\n      }\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport postsReducer from './posts';\nimport homeReducer from './home';\n\nconst reducer = combineReducers({\n  posts: postsReducer,\n  home: homeReducer\n})\n\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './reducers/index';\nimport promise from 'redux-promise-middleware';\nimport logger from 'redux-logger';\n\n\nconst store = createStore(reducer, applyMiddleware(\n  promise,\n  logger\n));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}