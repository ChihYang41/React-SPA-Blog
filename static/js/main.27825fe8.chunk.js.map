{"version":3,"sources":["components/nav/NavTitle.js","components/nav/NavItem.js","components/nav/nav.js","components/write_post/NewPost.js","action.js","containers/NewPostContainer.js","components/home/VideoToggle.js","components/home/home.js","components/post/PostCard.js","components/post/post.js","containers/PostsContainer.js","components/single_post/Loading.js","components/single_post/EditItem.js","components/single_post/SinglePost.js","containers/SinglePostContainer.js","App.js","serviceWorker.js","reducers/singlePost.js","reducers/getAllPosts.js","reducers/index.js","index.js"],"names":["NavTitle","props","className","to","NavItem","text","exact","path","children","match","BlogNavbar","bg","expand","Toggle","aria-controls","Collapse","id","NewPost","handleChangeAuthor","e","setState","author","target","value","handleChangeTitle","title","handleChangeContent","body","handleSubmit","preventDefault","createPost","history","state","push","this","console","log","onChange","type","onClick","Component","GET_SINGLE_POST","GET_ALL_POSTS","withRouter","connect","dispatch","payload","axios","post","VideoToggle","useState","open","setOpen","Fragment","aria-expanded","in","style","width","height","aspect","aspectRatio","src","frameBorder","allow","allowFullScreen","Home","PostCard","posts","map","key","Posts","getAllPosts","allPosts","AllPostsReducer","get","Loading","animation","role","EditItem","SinglePost","handleDelete","deletePost","window","confirm","params","handleEditMode","isEditing","handleEditTitle","handleEditContent","handleEditSubmit","editPost","singlePost","getSinglePost","prevProps","prevState","isLoading","singlePostReducer","isPostRequesting","delete","put","App","component","PostsContainer","NewPostContainer","SinglePostContainer","Boolean","location","hostname","initState","isLoadingDeletePost","reducer","combineReducers","action","data","store","createStore","applyMiddleware","promise","logger","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.27825fe8.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nexport default function NavTitle(props) {\n  return (\n    <Link className=\"navbar-brand\" to=\"/React-SPA-Blog/\">Blog</Link>\n  )\n}","import React from 'react';\nimport { Link, Route } from \"react-router-dom\";\n\nexport default function NavItem(props) {\n  const { text, exact, to } = props;\n  return (\n    <Route\n      path={to}\n      exact={exact}\n      children={({ match }) => (\n        <li className={match ? \"active\" : \"\"}>\n          {match ? \"> \" : \"\"}\n          <Link to={to}>{text}</Link>\n        </li>\n      )}\n    />\n  )\n}","import React from 'react';\nimport './nav.css';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavTitle from './NavTitle';\nimport NavItem from './NavItem';\n\nfunction BlogNavbar() {\n  return (\n    <Navbar bg=\"dark\" expand=\"lg\">\n      <NavTitle/>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <NavItem text=\"Home\" to=\"/React-SPA-Blog/\" exact={true}>Home</NavItem>\n          <NavItem text=\"Posts\" to=\"/React-SPA-Blog/posts\">Posts</NavItem>\n          <NavItem text=\"Write a post\" to=\"/React-SPA-Blog/NewPost\">Write a post</NavItem>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default BlogNavbar;","import React, { Component } from 'react';\nimport './NewPost.css';\n\nclass NewPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      body: '',\n      author: ''\n    }\n  }\n\n  handleChangeAuthor = (e) => {\n    this.setState({\n      author: e.target.value\n    })\n  }\n\n  handleChangeTitle = (e) => {\n    this.setState({\n      title: e.target.value\n    })\n  }\n\n  handleChangeContent = (e) => {\n    this.setState({\n      body: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { createPost, history } = this.props;\n    const { author, title, body } = this.state\n    createPost(author, title, body);\n    this.setState({\n      title: '',\n      body: '',\n      author: ''\n    })\n    history.push('/React-SPA-Blog/posts')\n  }\n\n  render() {\n    const { title, body, author } = this.state\n    console.log(this.state)\n    return (\n      <div>\n        <h2>Write a Post</h2>\n         <div className=\"new-post-author\">\n          <label>作者：</label>\n          <textarea onChange={this.handleChangeAuthor} value={author}></textarea>\n        </div>\n        <div className=\"new-post-title\">\n          <label>標題：</label>\n          <textarea onChange={this.handleChangeTitle} value={title}></textarea>\n        </div>\n        <div className=\"new-post-content\">\n          <label>內文：</label>\n          <textarea onChange={this.handleChangeContent} value={body}></textarea>\n        </div>\n        <button type=\"submit\" className=\"btn btn-outline-info\" onClick={this.handleSubmit}>Submit</button>\n      </div>\n    );\n  }\n}\n\nexport default NewPost;","import axios from 'axios';\n\n// action types\nexport const CREATE_POST = 'CREATE_POST'\nexport const DELETE_POST = 'DELETE_POST';\nexport const EDIT_POST = 'EDIT_POST';\nexport const GET_SINGLE_POST = 'GET_SINGLE_POST';\nexport const GET_ALL_POSTS = 'GET_ALL_POSTS';\n\n// action creator\nexport const createPost = (author, title, body) => {\n  return {\n    type: CREATE_POST,\n    payload: axios.post('https://qootest.com/posts', {\n      author, title, body\n    })\n  }\n}\n\nexport const deletePost = (id) => {\n  return {\n    type: DELETE_POST,\n    payload: axios.delete('https://qootest.com/posts/' + id)\n  }\n}\n\nexport const editPost = (id, author, title, body) => {\n  return {\n    type: EDIT_POST,\n    payload: axios.put('https://qootest.com/posts/' + id , {\n      author, title, body\n    })\n  }\n}\n\nexport const getSinglePost = (id) => {\n  return {\n    type: GET_SINGLE_POST,\n    payload: axios.get('https://qootest.com/posts/' + id)\n  }\n}\n\nexport const getAllPosts = () => {\n  return {\n    type: GET_ALL_POSTS,\n    payload: axios.get('https://qootest.com/posts')\n  }\n}\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport NewPost from '../components/write_post/NewPost';\nimport { createPost } from '../action'\n\nconst NewPostContainer = (props) => {\n  return (<NewPost {...props} />)\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createPost: (author, title, body)  => {\n      dispatch(createPost(author, title, body))\n    }\n  }\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(NewPostContainer));","import React, { useState } from 'react';\nimport ResponsiveEmbed from 'react-bootstrap/ResponsiveEmbed';\nimport Button from 'react-bootstrap/Button';\nimport Fade from 'react-bootstrap/Fade';\n\nexport default function VideoToggle() {\n  const [open, setOpen] = useState(false);\n  return (\n    <React.Fragment>\n      <Button\n        onClick={() => setOpen(!open)}\n        aria-controls=\"example-fade-text\"\n        aria-expanded={open}\n      >\n        來首歌好嗎？\n      </Button>\n      <Fade in={open}>\n        <div style={{ width: 660, height: 'auto' }} className=\"home-page-video\">\n          <ResponsiveEmbed aspect=\"a16by9\" aspectRatio=\"16by9\">\n            <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/0dxP6oEuNHM\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen />\n          </ResponsiveEmbed>\n        </div>\n      </Fade>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport './home.css';\nimport VideoToggle from './VideoToggle'\n\nfunction Home() {\n  return (\n    <div>\n      <h2>Home Page</h2>\n      <p>E 世代最ㄅㄧㄤˋ的事情，就是到戰略高手上奇摩家族，一邊用即時通把妹，或是帶著最新的哈電族跟同一掛的麻吉去西門町壓馬路。</p>\n      <p>如果有人看不懂，哇哩咧，你們就真的是LKK了。</p>\n      <VideoToggle />\n    </div>\n  );\n}\n\nexport default Home;","import React from 'react';\n\nexport default function PostCard({ posts, history }) {\n  return (\n    posts.map(post => {\n      return (\n        <div key={post.id} className=\"card text-white bg-dark mb-3\" onClick={() => {\n          history.push('/React-SPA-Blog/posts/' + post.id)\n        }}>\n          <div className=\"card-header\">{post.id}</div>\n          <div className=\"card-body\">\n            <h4 className=\"card-title\">{post.title}</h4>\n            <p className=\"card-text\">{post.body}</p>\n          </div>\n        </div>\n      )\n    })\n  )\n}","import React, { Component } from 'react';\nimport './post.css';\nimport PostCard from './PostCard';\n\nclass Posts extends Component {\n\n  componentDidMount() {\n    const { getAllPosts } = this.props;\n    getAllPosts();\n  }\n\n  render() {\n    const { history, allPosts } = this.props;\n    return (\n      <div>\n        <h2>Posts</h2>\n        <div className=\"post-list\">\n          <PostCard posts={allPosts} key={allPosts.id} history={history}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Posts;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\nimport Posts from '../components/post/post';\nimport { getAllPosts } from '../action'\n\nconst PostsContainer = (props) => {\n  return (<Posts {...props} />)\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    allPosts: state.AllPostsReducer.allPosts,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getAllPosts: () => {\n      dispatch(getAllPosts())\n    }\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PostsContainer));","import React from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\n\nexport default function Loading() {\n  return (\n    <Spinner animation=\"border\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n  )\n}","import React from 'react';\n\nexport default function EditItem({className, value, onChange}) {\n  return(\n    <div className={className}>\n      <textarea value={value} onChange={onChange}></textarea>\n    </div>\n  )\n}","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport './singlePost.css';\nimport Loading from './Loading';\nimport EditItem from './EditItem';\n\nclass SinglePost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditing: false,\n      title: '',\n      body: '',\n      author: '',\n    }\n  }\n\n  componentDidMount() {\n    const { match, getSinglePost } = this.props\n    getSinglePost(match.params.id);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      const { singlePost } = this.props\n      this.setState({\n        title: singlePost.title,\n        body: singlePost.body,\n        author: singlePost.author\n      })\n    }\n  }\n\n  handleDelete = () => {\n    const message = '確定要刪除嗎？';\n    const { match, deletePost, history } = this.props;\n    if (window.confirm(message)) {\n      deletePost(match.params.id);\n      history.push('/React-SPA-Blog/posts')\n    } else {\n      return null;\n    }\n  }\n\n  handleEditMode = () => {\n    this.setState({\n      isEditing: !this.state.isEditing,\n    })\n  }\n\n  handleEditTitle = (e) => {\n    this.setState({\n      title: e.target.value\n    })\n  }\n\n  handleEditContent = (e) => {\n    this.setState({\n      body: e.target.value\n    })\n  }\n\n  handleEditSubmit = () => {\n    const { author, title, body } = this.state;\n    const { editPost, singlePost, history} = this.props;\n    editPost(singlePost.id, author, title, body);\n    history.push('/React-SPA-Blog/posts')\n  }\n\n  render() {\n    const { isEditing, title, body } = this.state;\n    const { singlePost, isLoading } = this.props;\n    return (\n      <div>\n        <div className=\"content\">\n          {\n            isEditing ?\n              <Fragment>\n                <EditItem className=\"edit-title\" value={title} onChange={this.handleEditTitle} />\n                <EditItem className=\"edit-content\" value={body} onChange={this.handleEditContent} />\n              </Fragment>\n              :\n              <Fragment>\n                <h2>{isLoading ? <Loading /> : singlePost.title}</h2>\n                { isLoading ? <Loading /> : <p className=\"card-content\"> {singlePost.body} </p> }\n              </Fragment>\n          }\n        </div>\n        <div className=\"btn-container\">\n          {\n            isEditing ?\n              <Fragment>\n                <button className=\"btn btn-outline-warning\" onClick={this.handleEditSubmit}>Submit</button>\n              </Fragment>\n              :\n              <Fragment>\n                <button className=\"btn btn-outline-primary\" onClick={this.handleDelete}>Delete</button>\n                <button className=\"btn btn-outline-warning\" onClick={this.handleEditMode}>Edit</button>\n              </Fragment>\n          }\n        </div>\n        <div className=\"back-btn-container\">\n          <Link to='/React-SPA-Blog/posts' className=\"btn btn-outline-info\"> Go back </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SinglePost;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\nimport SinglePost from '../components/single_post/SinglePost';\nimport { getSinglePost, deletePost, editPost } from '../action'\n\nconst SinglePostContainer = (props) => {\n  return (<SinglePost {...props} />)\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    singlePost: state.singlePostReducer.singlePost,\n    isLoading: state.singlePostReducer.isPostRequesting\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    deletePost: id => {\n      dispatch(deletePost(id))\n    },\n\n    editPost: (id, author, title, body) => {\n      dispatch(editPost(id, author, title, body))\n    },\n\n    getSinglePost: id => {\n      dispatch(getSinglePost(id))\n    }\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SinglePostContainer));","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './bootstrap.min.css'\nimport './App.css';\nimport BlogNavbar from './components/nav/nav.js';\nimport NewPostContainer from './containers/NewPostContainer.js';\nimport Home from './components/home/home.js';\nimport PostsContainer from './containers/PostsContainer.js';\nimport SinglePostContainer from './containers/SinglePostContainer.js'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <BlogNavbar/>\n          <div className=\"main-page\">\n            <Route exact path=\"/React-SPA-Blog/\" component={Home} />\n            <Route exact path=\"/React-SPA-Blog/posts\" component={PostsContainer} />\n            <Route path=\"/React-SPA-Blog/NewPost\" component={NewPostContainer} />\n            <Route path=\"/React-SPA-Blog/posts/:id\" component={SinglePostContainer} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { GET_SINGLE_POST } from '../action';\n\nconst initState = {\n  singlePost: {},\n  isPostRequesting: false,\n};\n\n// reducers\nexport default function singlePostReducer(state = initState, action) {\n  switch (action.type) {\n    case `${GET_SINGLE_POST}_PENDING`:\n      return {\n        ...state,\n        isPostRequesting: true,\n      }\n    case `${GET_SINGLE_POST}_FULFILLED`:\n      return {\n        ...state,\n        singlePost: action.payload.data,\n        isPostRequesting: false\n      }\n    case `${GET_SINGLE_POST}_REJECTED`:\n      return {\n        ...state,\n        isPostRequesting: false,\n      }\n    default:\n      return state;\n  }\n}\n\n","import { GET_ALL_POSTS } from '../action';\n\nconst initState = {\n  allPosts: [],\n  isLoadingDeletePost: false\n};\n\n// reducers\nexport default function AllPostsReducer(state = initState, action) {\n  switch (action.type) {\n    case `${GET_ALL_POSTS}_PENDING`:\n      return {\n        ...state,\n      }\n    case `${GET_ALL_POSTS}_FULFILLED`:\n      return {\n        ...state,\n        allPosts: action.payload.data,\n      }\n    case `${GET_ALL_POSTS}_REJECTED`:\n      return {\n        ...state,\n      }\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux';\nimport singlePostReducer from './singlePost';\nimport AllPostsReducer from './getAllPosts';\n\nconst reducer = combineReducers({\n  singlePostReducer,\n  AllPostsReducer\n})\n\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './reducers/index';\nimport promise from 'redux-promise-middleware';\nimport logger from 'redux-logger';\n\n\nconst store = createStore(reducer, applyMiddleware(\n  promise,\n  logger\n));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}